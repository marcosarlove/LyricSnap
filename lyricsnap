#!/usr/bin/ python3

import os
import sys
from googlesearch import search
import requests
from bs4 import BeautifulSoup as bs
from rich.console import Console
from rich.text import Text
from rich.panel import Panel

# Configura√ß√µes
URL_LETRAS = "https://www.letras"
USER_AGENT = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36"

def show_banner(title, content):
    """Exibe um banner estilizado no terminal"""
    console = Console()
    banner_text = Text(content, style="bold cyan")
    banner_panel = Panel(
        banner_text,
        title=title,
        subtitle="",
        border_style="green",
        padding=(1, 5),
    )
    console.print(banner_panel)

def get_web_page(url):
    """Obt√©m o conte√∫do de uma p√°gina web"""
    headers = {'User-Agent': USER_AGENT}
    page = requests.get(url, headers=headers)
    page.raise_for_status()
    return page.text

def google_search(keywords, num_results=5):
    """Realiza uma busca no Google usando a biblioteca googlesearch"""
    try:
        results = search(f"{keywords} letras")
        # Filtra apenas resultados do letras.mus.br
        while True:
            url = next(results)
            if url.startswith(URL_LETRAS): return url
    except Exception as e:
        print(f"Erro na busca do Google: {e}")
        return None
    return urls

def find_lyrics(url):
    """Extrai a letra e tradu√ß√£o da m√∫sica"""
    webpage = get_web_page(url)
    soup = bs(webpage, "html.parser")
    
    title, artist = get_music_data(soup)
    lyrics = soup.select(".lyric-original p")
    lyrics = format_lyrics(str(lyrics)[1:-1])
    
    # Tenta obter tradu√ß√£o
    try:
        traduction_page = get_web_page(url + "/traducao.html")
        traduction_soup = bs(traduction_page, "html.parser")
        traduction = traduction_soup.select(".lyric-translation span span:nth-child(1)")
        traduction = format_lyrics(str(traduction)[1:-1])
    except:
        traduction = "No translation available"

    return {
        "title": title,
        "artist": artist,
        "lyric": lyrics,
        "traduction": traduction
    }

def get_music_data(page):
    """Obt√©m t√≠tulo e artista da m√∫sica"""
    title = page.select_one("h1[class=textStyle-primary]")
    artist = page.select_one("h2[class=textStyle-secondary]")
    return title.text.strip(), artist.text.strip()

def format_lyrics(lyric):
    """Formata a letra para melhor visualiza√ß√£o"""
    lyric = lyric.strip()
    lyric = lyric.replace("<br/>", "\n").replace("<p>", "")
    lyric = lyric.replace("<span>", "")
    lyric = lyric.replace("</span>", "\n\n")
    lyric = lyric.replace("</p>", "\n\n")
    lyric = lyric.replace("\n\n, ", "\n\n")
    return lyric

def main(mode):
    """Fun√ß√£o principal"""
    os.system("clear")
    show_banner("LyricSnap", "üéµ Welcome to LyricSnap üéµ\nBy: Marcos Arlove (Updated Version)")
    
    title = input("Enter the song title: ")
    artist = input("Enter the singer's name: ")
    keywords = f"{artist} {title}"
    
    try:
        links = google_search(keywords)
        if not links:
            print("No results found on letras.mus.br")
            sys.exit(1)
            
        data = find_lyrics(links)
    except Exception as e:
        print(f"An error occurred: {e}")
        sys.exit(1)

    full_title = f"{data['title']} - {data['artist']}"
    
    if mode:
        show_banner(full_title, data["lyric"])
        show_banner("Translation", data["traduction"])
    else:
        os.makedirs("lyrics", exist_ok=True)
        filename = f"lyrics/{full_title.replace(' ', '_')}.txt"
        with open(filename, "w", encoding="utf-8") as f:
            f.write(f"{full_title}\n\n")
            f.write(data["lyric"])
            f.write("\n\n--- TRANSLATION ---\n\n")
            f.write(data["traduction"])
        print(f"Lyrics saved to {filename}")

if __name__ == "__main__":
    if len(sys.argv) == 1:
        main(True)
    elif sys.argv[1] == "-f":
        main(False)
    else:
        print(f"Invalid parameter: {sys.argv[1]}")
        print("Usage: python lyricsnap.py [-f]")
